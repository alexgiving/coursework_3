name: CI

on: [push, pull_request, workflow_dispatch]

env:
  docker_image_name: simplewhale
  repo_name: ${{ github.repository }}
  sha_git: ${{ github.sha }}

  # bool variables
  # 1 == true
  # 0 == false

  use_telegram: 1
  use_email: 1
  skip_deploy: 0

jobs:
  Build_Workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt

      - name: Run build script
        run: |
          mkdir build_files
          python3 scripts/build_artifacts.py

      - name: Download artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: build_files
          if-no-files-found: error
          retention-days: 1

  Test_Workflow:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: Build_Workflow
    steps:
      - uses: actions/checkout@v3

      - name: Get artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: build_files/

      - name: Install dependencies
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements.txt

      - name: Run tests
        run: |
          python3 scripts/test_script.py

  Output_Workflow:
    runs-on: ubuntu-latest
    needs: [Build_Workflow, Deploy_Workflow]
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
          mkdir build_files/

      - name: Get artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: build_files/

      - name: Prepare metrics
        if: ${{ success() }}
        run: |
          mkdir temp
          python3 scripts/accuracy_test.py >> temp/file.html

      - name: Get failure message
        if: ${{ failure() }}
        run: |
          mkdir temp
          python3 scripts/failure_message.py >> temp/file.html

      - if: ${{ env.use_email == 1 }}
        name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Job completed ${{job.status}}
          to: alexgiving@mail.ru
          from: GitHub Push Bot
          secure: true
          html_body: file://temp/file.html
          ignore_cert: true
          convert_markdown: true
          attachments: build_files/*

      - if: ${{ env.use_telegram == 1 }}
        name: Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ====================
            ${{ github.actor }} created ${{job.status}} commit:

            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

  Deploy_Workflow:
    runs-on: ubuntu-latest
    needs: [Build_Workflow, Test_Workflow]
    steps:
      - uses: actions/checkout@v3
      - run: mkdir build_files

      - name: Get model artifacts
        if: env.skip_deploy != 1
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: build_files/

      # - name: Create docker image
      #   run: |
      #     docker build -t product_nn .
      #     mkdir -p docker_folder_path
      #     docker save product_nn > docker_folder_path/docker-image.tar
      #
      # - name: Collect docker artifacts (optional)
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: docker-artifact
      #     path: docker_folder_path
      #     retention-days: 1

      - name: Login to Docker Hub
        if: env.skip_deploy != 1
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        if: env.skip_deploy != 1
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        if: env.skip_deploy != 1
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{env.docker_image_name}}:latest
